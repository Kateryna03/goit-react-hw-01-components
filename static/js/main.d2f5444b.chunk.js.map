{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendsList/FriendsList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.js","components/Profile/Profile.js","components/FriendsList/FriendsList.js","components/FriendsList/FriendsListItem.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["module","exports","TransactionHistory","items","className","styles","transactionHistory","map","item","type","amount","currency","id","Profile","name","stats","location","tag","avatar","profile","description","src","alt","statsItem","label","quantity","followers","views","likes","FriendList","isOnline","listFriends","online","offline","width","FriendListItem","friends","friend","Statistics","title","statistics","statList","stat","style","backgroundColor","Math","floor","random","toString","substr","percentage","App","user","statisticalData","transactions","ReactDOM","render","document","querySelector","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d2f5444b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"stats\":\"Profile_stats__25zJx\",\"statsItem\":\"Profile_statsItem__3NWvo\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listFriends\":\"FriendsList_listFriends__3Fwpl\",\"item\":\"FriendsList_item__MaPkV\",\"online\":\"FriendsList_online__1V3MN\",\"offline\":\"FriendsList_offline__sRSDc\",\"avatar\":\"FriendsList_avatar__3KgqD\",\"name\":\"FriendsList_name__LV0kC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","import PropTypes from 'prop-types';\nimport styles from '../TransactionHistory/TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\nimport styles from '../Profile/Profile.module.css';\n\nexport default function Profile({ name, stats, location, tag, avatar }) {\n  return (\n    <div className={styles.profile}>\n      <div className={styles.description}>\n        <img src={avatar} alt={name} className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>@{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quantity}>{stats.views}</span>\n        </li>\n        <li className={styles.statsItem}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf(PropTypes.number).isRequired,\n};\n// import user from 'путь/к/user.json;\n","import PropTypes from 'prop-types';\nimport styles from '../FriendsList/FriendsList.module.css';\nexport default function FriendList({ isOnline, avatar, name }) {\n  return (\n    <ul className={styles.listFriends}>\n      <li className={styles.item}>\n        <span className={isOnline ? styles.online : styles.offline}>\n          {/* {isOnline ? 'Online' : 'Offline'} */}\n        </span>\n        {/* <span className={styles.status}>{status ? 'Online' : 'Offline'}</span> */}\n        <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n        <p className={styles.name}>{name}</p>\n      </li>\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  isOnline: PropTypes.bool.isRequired,\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import FriendList from './FriendsList';\n//import { styles } from './FriendsList/FriendListItem.module.css';\nimport PropTypes from 'prop-types';\n\nfunction FriendListItem({ friends }) {\n  return friends.map(friend => (\n    <li key={friend.id}>\n      <FriendList\n        isOnline={friend.isOnline}\n        avatar={friend.avatar}\n        name={friend.name}\n      />\n    </li>\n  ));\n}\n\nFriendListItem.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport styles from '../Statistics/Statistics.module.css';\n//import React from 'react';\n\n// function setbodybgcolor() {\n//   document.li.styles.backgroundColor = getRandomColor();\n// }\nfunction getRandomColor() {\n  let hex = Math.floor(Math.random() * 0xffffff);\n  return '#' + hex.toString(16).substr(-6);\n}\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      <ul className={styles.statList}>\n        {stats.map(stat => (\n          <li\n            key={stat.id}\n            className={styles.item}\n            style={{ backgroundColor: getRandomColor() }}\n          >\n            <span className={styles.label}>{stat.label}</span>\n            <span className={styles.percentage}>{stat.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","import transactions from './transactions.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport Profile from './components/Profile/Profile';\nimport user from './user.json';\nimport FriendListItem from './components/FriendsList/FriendsListItem';\nimport friends from './friends.json';\nimport statisticalData from './statistical-data.json';\nimport Statistics from './components/Statistics/Statistics';\n\nexport default function App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      {/* <Statistics stats={statisticalData} />; */}\n      <FriendListItem friends={friends} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","import React from 'react';\nimport App from './App';\n// import './index.css';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}